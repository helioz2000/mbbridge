// mbbridge configuration file

// This value determines the granularity of the measuring system
mainloopinterval = 250;		// [ms]

// MQTT broker parameters
mqtt = {
	broker = "localhost";
	debug = false;			// only works in command line mode
	retain_default = true;	// mqtt retain setting for publish
	noreadonexit = false;	// publish noread value of all tags on exit
	clearonexit = true;	// clear all tags from mosquitto persistance store on exit (via null message)
};

// MQTT subscription list - modbus slave write registers
// the topics listed here are written to the slave whenever the broker publishes
// topic: mqtt topic to subscribe
// slaveid: modbus slave address to write
// address: modbus slave register address to write
// datatype: tag type, i=input, q=output, r=register (16bit)
// ignoreretained: true= do not write retained published value to modbus
mqtt_tags = (
	{
	topic = "binder/home/shack/heater/runcommand";
	slaveid = 10;
	address = 0;
	datatype = "q";
	ignoreretained = true;
	},
	{
	topic = "binder/home/power/ttngateway/offcommand";
	slaveid = 12;
	address = 0;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power240radio/pwr1oncommand";
	slaveid = 15;
	address = 0;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power240radio/pwr2oncommand";
	slaveid = 15;
	address = 1;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power12radio/pwr1oncommand";
	slaveid = 16;
	address = 0;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power12radio/pwr2oncommand";
	slaveid = 16;
	address = 1;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power12radio/pwr3oncommand";
	slaveid = 16;
	address = 2;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power12radio/pwr4oncommand";
	slaveid = 16;
	address = 3;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power12radio/pwr5oncommand";
	slaveid = 16;
	address = 4;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power12radio/pwr6oncommand";
	slaveid = 16;
	address = 5;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power12radio/pwr7oncommand";
	slaveid = 16;
	address = 6;
	datatype = "q";
	},
	{
	topic = "binder/home/shack/power12radio/pwr8oncommand";
	slaveid = 16;
	address = 7;
	datatype = "q";
	},
	{
	topic = "binder/home/aircon/vsd/sp_spd_hi";
	slaveid = 20;
	address = 40179;
	datatype = "r";
	ignoreretained = true;
	},
	{
	topic = "binder/home/aircon/vsd/sp_spd_lo";
	slaveid = 20;
	address = 40104;
	datatype = "r";
	ignoreretained = true;
	},
	{
	topic = "binder/home/aircon/ctrl/vsd_run_cmd";
	slaveid = 21;
	address = 0;
	datatype = "q";
	ignoreretained = true;
	},
	{
	topic = "binder/home/aircon/ctrl/pump_run_cmd";
	slaveid = 21;
	address = 4;
	datatype = "q";
	ignoreretained = true;
	}
)

// Modbus RTU interface configuration
// only one interface device is allowed
modbusrtu = {
	device = "/dev/ttyUSB0";	// mandatory
	baudrate = 1200;			// mandatory
// optional parameters:
	responsetimeout_us = 500000;// useconds
	responsetimeout_s = 3;		// seconds
	interslavedelay = 900000;	// useconds delay between slave requests
	maxretries = 2;				// retry failed modbus transactions
	debuglevel = 0;				// 0 = off 1 = basic, 2 = protocol details (only works when not run as system daemon)
	slavestatustopic = "binder/home/modbus/slavestatus/"	// the topic to publish slave online/offline status
	slavestatusretain = true;	// retain value when publishign slave status
};

// Updatecycles definition
// every modbus tag is read in one of these cycles
// id - a freely defined unique integer which is referenced in the tag definition
// interval - the time between reading, in seconds
updatecycles = (
	{
	id = 1;
	interval = 10;	// seconds
	},
	{
	id = 2;
	interval = 20;
	},
	{
	id = 3;
	interval = 30;
	},
	{
	id = 6;
	interval = 60;
	},
	{
	id = 12;
	interval = 120;		// 2 minutes
	},
	{
	id = 30
	interval = 300;		// 5 minutes
	},
	{
	id = 60;
	interval = 600;		// 10 minutes
	},
	{
	id = 180;
	interval = 1800;	// 30 minutes
	}
)

// Modbus slave list - modbus slave read/write registers
// definition of every modbus slave and it's associated tags
// name = a freely definable name
// id = the modbus slave RTU address
// enabled = true or false to disable (ignore) any tags in slave
// default_retain = true or false, applied as default to all tags
// default_noreadaction = -1 or 0 or 1, applied as default to all tags
// tags = a list of tag definitions to be read at the indicated interval
// tag parameter description:
// address: the register address of the tag in the modbus device
//		0-9999 = Coil (1 bit)
//		10000-19999 = Discrete Input (1 bit)
//		30000-39999 = Input Register (16 bit)
//		40000-49999 = Holding Register (16 bit)

// group: consecutive tags with same group number [>0] are grouped for processing in a single modbus read request
// update_cycle: the id of the cycle for updating and publishing this tag
// topic: mqtt topic under which to publish the value, en empty string will revent pblishing
// retain: retain value for mqtt publish (default = false)
// format: printf style format for mqtt publication, NOTE: all values are type "float"
// multiplier: raw value (from slave) will be multiplied by this factor
// offset: value to be added after above multiplication
// noreadvalue: value published when modbus read fails
// noreadaction: -1 = do nothing (default), 0 = publish null 1 = noread value
// noreadignore: number of noreads to ignore before taking noreadaction 
mbslaves = (
	{
	name = "Shack";
	id = 10;
	enabled = TRUE;
	tags =
		(
			{
			address = 40100;
			update_cycle = 2;
			topic = "binder/home/shack/room/temp";
			retain = FALSE;
			format = "%.1f"
			multiplier = 0.01;
			noreadaction = 0;
			noreadignore = 2;
			}
		)
	},
	{
	name = "Bed1";
	id = 11;
	enabled = TRUE;
	tags = 
		(
			{
			address = 40100;
			update_cycle = 2;
			topic = "binder/home/bed1/room/temp";
			retain = FALSE;
			noreadaction = 0;
			noreadignore = 2;
			format = "%.1f"
			multiplier = 0.01;
			}
		)
	},
	{
	name = "TTNpwr"
	id = 12;
	enabled = TRUE;
	tags =
		(
			{
			// read output state regularly to detect device online state
			address = 0;
			update_cycle = 2;
			topic = "binder/home/power/ttngateway/state";
			format = "%.0f"			
			}
		)
	},
	{
	name = "Balcony";
	id = 14;
	enabled = TRUE;
	tags =
		(
			{
			address = 40110;
			group = 1;
			update_cycle = 2;
			topic = "binder/home/balcony/temp";
			retain = TRUE;
			noreadaction = 0;
			noreadignore = 2;
			format = "%.1f";
			multiplier = 0.01;
			},
			{
			address = 40111;
			group = 1;
			update_cycle = 2;
			topic = "binder/home/balcony/humidity";
			retain = TRUE;
			noreadaction = 0;
			noreadignore = 2;
			format = "%.1f";
			multiplier = 0.01;
			}
		)
	},
	{
	name = "ShackPower240"
	id = 15;
	enabled = TRUE;
	tags =
		(
			{
			// read output state regularly
			address = 0;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power240radio/pwr1state";
			format = "%.0f"
			},
			{
			// read output state regularly
			address = 1;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power240radio/pwr2state";
			format = "%.0f";
			},
			{
			address = 40100;
			update_cycle = 2;
            topic = "binder/home/shack/power240radio/temp";
            retain = FALSE;
            format = "%.1f";
            multiplier = 0.01;
            noreadaction = 0;
            noreadignore = 2;
            }
		)
	},
	{
	name = "ShackPower12V";
	id = 16;
	enabled = TRUE;
	tags = 
		(
			// read output states regularly
			{
			address = 0;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power12radio/pwr1state";
			format = "%.0f"
			},
			{
			address = 1;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power12radio/pwr2state";
			format = "%.0f"
			},
			{
			address = 2;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power12radio/pwr3state";
			format = "%.0f"
			},
			{
			address = 3;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power12radio/pwr4state";
			format = "%.0f"
			},
			{
			address = 4;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power12radio/pwr5state";
			format = "%.0f"
			},
			{
			address = 5;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power12radio/pwr6state";
			format = "%.0f"
			},
			{
			address = 6;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power12radio/pwr7state";
			format = "%.0f"
			},
			{
			address = 7;
			group = 5;
			update_cycle = 2;
			topic = "binder/home/shack/power12radio/pwr8state";
			format = "%.0f"
			},
			// read temperature 
			{
			address = 40100;
			update_cycle = 2;
			topic = "binder/home/shack/power12radio/temp";
			retain = FALSE;
			format = "%.1f";
			multiplier = 0.01;
			noreadaction = 0;
			noreadignore = 2;
			}
		)
	},
	{
	name = "AirconCtrl";
	id = 21;
	enabled = FALSE;
	default_retain = FALSE;
	default_noreadaction = 0;
	tags = 
		(
			{
			address = 10000;
			group = 3;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/pump_run_input";
			format = "%.0f";
			},
			{
			address = 10001;
			group = 3;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/hi_speed_input";
			format = "%.0f";
			},
			{
			address = 10002;
			group = 3;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/pb_local_start";
			format = "%.0f";
			},
			{
			address = 10003;
			group = 3;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/pb_local_stop";
			format = "%.0f";
			},
			{
			address = 10004;
			group = 3;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/local_active";
			format = "%.0f";
			},
			{
			address = 0;
			group = 4;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/vsd_run_cmd";
			format = "%.0f";
			},
			{
			address = 1;
			group = 4;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/vsd_spd_b0_cmd";
			format = "%.0f";
			},
			{
			address = 2;
			group = 4;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/vsd_spd_b1_cmd";
			format = "%.0f";
			retain = FALSE;
			},
			{
			address = 3;
			group = 4;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/vsd_spd_b2_cmd";
			format = "%.0f";
			},
			{
			address = 4;
			group = 4;
			update_cycle = 1;
			topic = "binder/home/aircon/ctrl/pump_run_cmd";
			format = "%.0f";
			}
		)
	},
	{
	name = "AirconVSD";
	id = 20;
	enabled = FALSE;
	default_noreadaction = 0;
	default_retain = FALSE;
	tags =
		(
			{
			address = 42100;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/status";
			noreadignore = 2;
			format = "%.0f";
			},
			{
			address = 42101;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/actual_speed";
			noreadignore = 2;
			format = "%.1f";
			multiplier = 0.01;
			},
			{
			address = 42102;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/setpoint_frequency";
			multiplier = 0.01;
			format = "%.1f";
			},
			{
			address = 42103;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/output_frequency";
			multiplier = 0.01;
			format = "%.1f";
			},
			{
			address = 42104;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/rpm";
			format = "%.0f";
			},
			{
			address = 42105;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/voltage";
			format = "%.1f";
			multiplier = 0.1;
			},
			{
			address = 42106;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/torque";
			format = "%.1f";
			multiplier = 0.1;
			},
			{
			address = 42107;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/current";
			retain = FALSE;
			format = "%.1f";
			multiplier = 0.01;
			},
			{
			address = 42108;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/power";
			format = "%.1f";
			multiplier = 0.1;
			},
			{
			address = 42109;
			group = 2;
			update_cycle = 1;
			topic = "binder/home/aircon/vsd/dc_link_voltage";
			format = "%.1f";
			}
		)
	}
)

// read and publish pi cpu temperature
// delete if not desired
cputemp = {
	topic = "binder/home/mqttpi/cpu/temp";
	readinterval = 20;
	publishinterval = 20;
};
